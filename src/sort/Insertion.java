package sort;

/**
 * 插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，
 * 找到相应位置并插入。
 * 
 * 算法描述
 * 
 * 一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下：
 * 
 * 从第一个元素开始，该元素可以认为已经被排序； 取出下一个元素，在已经排序的元素序列中从后向前扫描； 如果该元素（已排序）大于新元素，将该元素移到下一位置；
 * 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置； 将新元素插入到该位置后； 重复步骤2~5。
 * 
 * 
 * @author hasee
 *
 */
public class Insertion {
	public int[] InsertionSort(int[] arr) {
		int preIndex = 0;
		int current = 0;
		for (int i = 1; i < arr.length; i++) {// 扫描未排序的元素
			preIndex = i - 1;
			current = arr[i];// 被插入数
			while (preIndex >= 0 && arr[preIndex] > current) {// 当前驱数大于被插入数时，前驱数向后一位
				arr[preIndex + 1] = arr[preIndex];
				preIndex--;
			}
			arr[preIndex + 1] = current;
		}
		return arr;
	}

	public static void main(String[] args) {
		int[] arr = { 2, 1, 3, 5, 8, 4, 14 };
		int[] res = new Insertion().InsertionSort(arr);
		ArrayUtil.printArray(res);
	}
}
